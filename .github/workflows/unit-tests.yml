on:
  push:
    branches:
      - master
  pull_request:

name: Tests

jobs:
  tests-stable:
    name: Tests (Stable)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      
      - name: Install libusb (for Ledger)
        run: sudo apt update && sudo apt install pkg-config libudev-dev
      
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: $HOME/.clang
          key: llvm-13.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "13.0"
          directory: $HOME/.clang
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo test
        run: cargo test --all --all-features
        env:
          LLVM_SYS_130_PREFIX: ${{ env.LLVM_PATH }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install libusb (for Ledger)
        run: sudo apt update && sudo apt install pkg-config libudev-dev

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: $HOME/.clang
          key: llvm-13.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "13.0"
          directory: $HOME/.clang
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        run: cargo +nightly fmt --all -- --check
        env:
          LLVM_SYS_130_PREFIX: ${{ env.LLVM_PATH }}

      - name: cargo clippy
        run: cargo +nightly clippy --all --all-features -- -D warnings
        env:
          LLVM_SYS_130_PREFIX: ${{ env.LLVM_PATH }}
