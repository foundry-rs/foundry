name: Heavy (long-running) integration tests

on:
    schedule:
        # Runs at 10PM utc
        - cron: "0 22 * * *"
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    build-tests:
        name: build tests / ${{ matrix.archive.name }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                archive:
                    - name: heavy-integration-tests
                      file: heavy-integration.tar.zst
                      flags: -p forge --features heavy-integration-tests
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
            - uses: taiki-e/install-action@nextest
            - name: Build archive (long-running tests)
              run: |
                  cargo nextest archive \
                  --locked \
                  --archive-file ${{ matrix.archive.file }} \
                  ${{ matrix.archive.flags }}
            - name: Upload archive
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ matrix.archive.name }}
                  path: ${{ matrix.archive.file }}

    install-svm-solc:
        name: install svm and solidity / ${{ matrix.job.name }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - name: Install svm
              run: cargo install svm-rs
            - name: Install Solidity 0.8.19
              run: svm install 0.8.19
            - name: Install Solidity 0.8.20
              run: svm install 0.8.20
            - name: Use Solidity 0.8.19
              run: svm use 0.8.19

    heavy-integration:
        name: heavy (long-running) integration tests / ${{ matrix.job.name }}
        runs-on: ubuntu-latest
        needs: build-tests
        strategy:
            matrix:
                job:
                    - name: Long-running integration tests
                      filter: "!test(~live) & test(heavy)"
        env:
            ETH_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/C3JEvfW6VgtqZQa-Qp1E-2srEiIc02sD
        steps:
            - uses: actions/checkout@v3
            - uses: taiki-e/install-action@nextest
            - uses: dtolnay/rust-toolchain@stable
            - name: Download archives
              uses: actions/download-artifact@v3
              with:
                  name: heavy-integration-tests

            - name: Forge RPC cache
              uses: actions/cache@v3
              if: matrix.job.name != 'non-forking'
              with:
                  path: "$HOME/.foundry/cache"
                  key: rpc-cache-${{ hashFiles('crates/forge/tests/rpc-cache-keyfile') }}

            - name: Setup git config
              run: |
                  git config --global user.name "GitHub Actions Bot"
                  git config --global user.email "<>"

            - name: Force use of HTTPS for submodules
              run: git config --global url."https://github.com/".insteadOf "git@github.com:"

            - name: cargo nextest
              run: |
                  # see https://github.com/foundry-rs/foundry/pull/3959
                  export LD_LIBRARY_PATH="$(rustc --print sysroot)/lib"
                  cargo nextest run --retries 3 --archive-file heavy-integration.tar.zst -E '${{ matrix.job.filter }}'

            # If any of the steps fail, this will create a high-priority issue
            # to signal so.
            - uses: JasonEtco/create-an-issue@v2
              if: ${{ failure() }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
              with:
                  update_existing: true
                  filename: .github/INTEGRATION_FAILURE.md
