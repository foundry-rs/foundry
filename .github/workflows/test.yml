on:
  push:
    branches:
      - master
  pull_request:

name: test

env:
  NEXTEST_EXPERIMENTAL_FILTER_EXPR: 1
  CARGO_TERM_COLOR: always

jobs:
  build-tests:
    name: build tests / ${{ matrix.archive.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        archive:
          - name: unit-tests
            file: nextest-unit.tar.zst
            flags: --workspace --all-features --lib --bins
          - name: integration-tests
            file: nextest-integration.tar.zst
            flags: --workspace
          - name: external-integration-tests
            file: nextest-external-integration.tar.zst
            flags: -p foundry-cli --features external-integration-tests
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Build archive (unit tests)
        run: cargo nextest archive --locked ${{ matrix.archive.flags }} --archive-file ${{ matrix.archive.file }}
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.archive.name }}
          path: ${{ matrix.archive.file }}

  unit:
    name: unit tests / ${{ matrix.job.name }}
    runs-on: ubuntu-latest
    needs: build-tests
    timeout-minutes: 60
    strategy:
      matrix:
        job:
          - name: non-forking
            filter: '!test(~fork)'
          - name: forking
            filter: 'test(~fork)'
    env:
      ETH_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/C3JEvfW6VgtqZQa-Qp1E-2srEiIc02sD
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: mkdir -p ~/.cargo/bin
      - name: Download archives
        uses: actions/download-artifact@v3
        with:
          name: unit-tests

      - name: cargo nextest
        run: ~/.cargo/bin/cargo-nextest nextest run --retries 3 --archive-file nextest-unit.tar.zst -E '${{ matrix.job.filter }}'

  integration:
    name: integration tests / ${{ matrix.job.name }}
    runs-on: ubuntu-latest
    needs: build-tests
    strategy:
      matrix:
        job:
          - name: non-forking
            filter: '!test(~fork)'
          - name: forking
            filter: 'test(~fork)'
        partition: [1, 2]
    env:
      ETH_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/C3JEvfW6VgtqZQa-Qp1E-2srEiIc02sD
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: mkdir -p ~/.cargo/bin
      - name: Download archives
        uses: actions/download-artifact@v3
        with:
          name: integration-tests

      - name: Forge RPC cache
        uses: actions/cache@v3
        if: matrix.job.name != 'non-forking'
        with:
          path: "$HOME/.foundry/cache"
          key: rpc-cache-${{ hashFiles('cli/tests/rpc-cache-keyfile') }}
      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      - name: cargo nextest
        run: ~/.cargo/bin/cargo-nextest nextest run --partition count:${{ matrix.partition }}/2 --retries 3 --archive-file nextest-integration.tar.zst -E '${{ matrix.job.filter }}'

  external-integration:
    name: external integration tests / ${{ matrix.job.name }}
    runs-on: ubuntu-latest
    needs: build-tests
    strategy:
      matrix:
        job:
          - name: non-forking
            filter: '!test(~fork_integration)'
          - name: forking
            filter: 'test(~fork_integration)'
    env:
      ETH_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/C3JEvfW6VgtqZQa-Qp1E-2srEiIc02sD
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: mkdir -p ~/.cargo/bin
      - name: Download archives
        uses: actions/download-artifact@v3
        with:
          name: external-integration-tests

      - name: Forge RPC cache
        uses: actions/cache@v3
        if: matrix.job.name != 'non-forking'
        with:
          path: "$HOME/.foundry/cache"
          key: rpc-cache-${{ hashFiles('cli/tests/rpc-cache-keyfile') }}
      - name: Force use of HTTPS for submodules
        run: git config --global url."https://github.com/".insteadOf "git@github.com:"

      - name: cargo nextest
        run: ~/.cargo/bin/cargo-nextest nextest run --retries 3 --archive-file nextest-external-integration.tar.zst -E '${{ matrix.job.filter }}'

  doc:
    name: doc tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo test
        run: cargo test --locked --workspace --all-features --doc

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          args: --all --all-features -- -D warnings
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: forge fmt
        run: cargo run --bin forge -- fmt --check testdata/

  cross-platform:
    name: Cross-platform tests
    if: github.event_name != 'pull_request'
    needs: [ integration, lint, doc, unit ]
    uses: ./.github/workflows/cross-platform.yml
