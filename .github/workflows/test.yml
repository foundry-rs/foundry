name: test

on:
    push:
        branches:
            - master
    pull_request:

concurrency:
    cancel-in-progress: true
    group: ${{github.workflow}}-${{github.ref}}

env:
    CARGO_TERM_COLOR: always

jobs:
    matrices:
        name: build matrices
        runs-on: ubuntu-latest
        outputs:
            test-matrix: ${{ steps.gen.outputs.test-matrix }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.11"
            - name: Generate matrices
              id: gen
              env:
                  EVENT_NAME: ${{ github.event_name }}
              run: |
                  output=$(python3 .github/scripts/matrices.py)
                  echo "::debug::test-matrix=$output"
                  echo "test-matrix=$output" >> $GITHUB_OUTPUT

    test:
        name: test ${{ matrix.name }}
        runs-on: ${{ matrix.os }}
        timeout-minutes: 60
        needs: matrices
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(needs.matrices.outputs.test-matrix) }}
        env:
            ETH_RPC_URL: https://eth-mainnet.alchemyapi.io/v2/C3JEvfW6VgtqZQa-Qp1E-2srEiIc02sD
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
              with:
                  target: ${{ matrix.target }}
            - uses: taiki-e/install-action@nextest
            - uses: taiki-e/setup-cross-toolchain-action@v1
              with:
                  target: ${{ matrix.target }}
            - name: Forge RPC cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.foundry/cache
                      ~/.config/.foundry/cache
                  key: rpc-cache-${{ hashFiles('crates/forge/tests/rpc-cache-keyfile') }}
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: Setup git config
              run: |
                  git config --global user.name "GitHub Actions Bot"
                  git config --global user.email "<>"
                  git config --global url."https://github.com/".insteadOf "git@github.com:"
            - name: Test
              run: cargo nextest run ${{ matrix.flags }}

    doctests:
        name: doc tests
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: cargo test
              run: cargo test --doc

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - run: cargo clippy --workspace --all-targets --all-features
              env:
                  RUSTFLAGS: -Dwarnings

    fmt:
        name: fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check

    forge-fmt:
        name: forge fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: forge fmt
              shell: bash
              # We have to ignore at shell level because testdata/ is not a valid Foundry project,
              # so running `forge fmt` with `--root testdata` won't actually check anything
              run: |
                  shopt -s extglob
                  cargo run --bin forge -- fmt --check testdata/**/!(Vm).sol

    feature-checks:
        name: feature checks
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: cargo hack
              run: cargo hack check
