warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
75 |         uint248 b = uint248(a);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint248' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
76 |         uint240 c = uint240(b);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint240' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
77 |         uint232 d = uint232(c);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint232' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
78 |         uint224 e = uint224(d);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint224' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
79 |         uint216 f = uint216(e);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint216' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
80 |         uint208 g = uint208(f);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint208' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
81 |         uint200 h = uint200(g);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint200' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
82 |         uint192 i = uint192(h);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint192' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
83 |         uint184 j = uint184(i);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint184' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
84 |         uint176 k = uint176(j);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint176' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
85 |         uint168 l = uint168(k);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint168' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
86 |         uint160 m = uint160(l);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint160' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
87 |         uint152 n = uint152(m);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint152' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
88 |         uint144 o = uint144(n);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint144' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
89 |         uint136 p = uint136(o);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint136' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
90 |         uint128 q = uint128(p);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint128' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
91 |         uint120 r = uint120(q);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint120' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
92 |         uint112 s = uint112(r);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint112' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
93 |         uint104 t = uint104(s);
   |                     ----------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint104' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
94 |         uint96 u = uint96(t);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint96' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
95 |         uint88 v = uint88(u);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint88' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
96 |         uint80 w = uint80(v);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint80' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
97 |         uint72 x = uint72(w);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint72' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
98 |         uint64 y = uint64(x);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint64' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
  --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
   |
99 |         uint56 z = uint56(y);
   |                    ---------
   |
   = note: Consider disabling this lint if you're certain the cast is safe:
           
           // casting to 'uint56' is safe because [explain why]
           // forge-lint: disable-next-line(unsafe-typecast)
           
   = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
100 |         uint48 A = uint48(z);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint48' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
101 |         uint40 B = uint40(A);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint40' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
102 |         uint32 C = uint32(B);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
103 |         uint24 D = uint24(C);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint24' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
104 |         uint16 E = uint16(D);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
105 |         uint8 F = uint8(E);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
110 |         int248 b = int248(a);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int248' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
111 |         int240 c = int240(b);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int240' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
112 |         int232 d = int232(c);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int232' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
113 |         int224 e = int224(d);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int224' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
114 |         int216 f = int216(e);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int216' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
115 |         int208 g = int208(f);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int208' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
116 |         int200 h = int200(g);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int200' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
117 |         int192 i = int192(h);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int192' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
118 |         int184 j = int184(i);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int184' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
119 |         int176 k = int176(j);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int176' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
120 |         int168 l = int168(k);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int168' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
121 |         int160 m = int160(l);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int160' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
122 |         int152 n = int152(m);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int152' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
123 |         int144 o = int144(n);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int144' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
124 |         int136 p = int136(o);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int136' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
125 |         int128 q = int128(p);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
126 |         int120 r = int120(q);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int120' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
127 |         int112 s = int112(r);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int112' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
128 |         int104 t = int104(s);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int104' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
129 |         int96 u = int96(t);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int96' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
130 |         int88 v = int88(u);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int88' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
131 |         int80 w = int80(v);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int80' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
132 |         int72 x = int72(w);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int72' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
133 |         int64 y = int64(x);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int64' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
134 |         int56 z = int56(y);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int56' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
135 |         int48 A = int48(z);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int48' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
136 |         int40 B = int40(A);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int40' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
137 |         int32 C = int32(B);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
138 |         int24 D = int24(C);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int24' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
139 |         int16 E = int16(D);
    |                   --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
140 |         int8 F = int8(E);
    |                  -------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
171 |         uint248 a_u248 = uint248(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint248' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
172 |         uint240 a_u240 = uint240(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint240' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
173 |         uint224 a_u224 = uint224(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint224' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
174 |         uint192 a_u192 = uint192(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint192' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
175 |         uint160 a_u160 = uint160(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint160' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
176 |         uint128 a_u128 = uint128(a);
    |                          ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
177 |         uint64 a_u64 = uint64(a);
    |                        ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint64' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
178 |         uint32 a_u32 = uint32(a);
    |                        ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
179 |         uint16 a_u16 = uint16(a);
    |                        ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
180 |         uint8 a_u8 = uint8(a);
    |                      --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
183 |         int248 i_i248 = int248(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int248' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
184 |         int240 i_i240 = int240(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int240' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
185 |         int224 i_i224 = int224(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int224' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
186 |         int192 i_i192 = int192(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int192' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
187 |         int160 i_i160 = int160(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int160' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
188 |         int128 i_i128 = int128(i);
    |                         ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
189 |         int64 i_i64 = int64(i);
    |                       --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int64' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
190 |         int32 i_i32 = int32(i);
    |                       --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
191 |         int16 i_i16 = int16(i);
    |                       --------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
192 |         int8 i_i8 = int8(i);
    |                     -------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
212 |         bytes31 b = bytes31(a);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes31' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
213 |         bytes30 c = bytes30(b);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes30' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
214 |         bytes28 d = bytes28(c);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes28' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
215 |         bytes24 e = bytes24(d);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes24' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
216 |         bytes20 f = bytes20(e);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes20' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
217 |         bytes16 g = bytes16(f);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
218 |         bytes12 h = bytes12(g);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes12' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
219 |         bytes8 i = bytes8(h);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
220 |         bytes4 j = bytes4(i);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes4' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
221 |         bytes2 k = bytes2(j);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes2' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
222 |         bytes1 l = bytes1(k);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes1' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
225 |         bytes32 fromDyn = bytes32(dyn);
    |                           ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
228 |         bytes32 fromStr = bytes32(bytes(s));
    |                           -----------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'bytes32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
233 |         uint256 b = uint256(a);
    |                     ----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint256' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
236 |         uint128 b128 = uint128(a128);
    |                        -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
239 |         int256 d = int256(c);
    |                    ---------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int256' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
242 |         int128 d128 = int128(c128);
    |                       ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
245 |         uint128 u_safe = uint128(safePos);
    |                          ----------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
248 |         int8 signedSmall = int8(small);
    |                            -----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
265 |         uint152 b = uint152(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint152' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
266 |         uint144 c = uint144(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint144' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
267 |         uint136 d = uint136(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint136' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
268 |         uint128 e = uint128(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
269 |         uint120 f = uint120(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint120' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
270 |         uint112 g = uint112(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint112' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
271 |         uint104 h = uint104(base);
    |                     -------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint104' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
272 |         uint96 i = uint96(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint96' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
273 |         uint88 j = uint88(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint88' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
280 |         uint80 k = uint80(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint80' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
281 |         uint72 l = uint72(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint72' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
282 |         uint64 m = uint64(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint64' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
283 |         uint56 n = uint56(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint56' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
284 |         uint48 o = uint48(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint48' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
285 |         uint40 p = uint40(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint40' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
286 |         uint32 q = uint32(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint32' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
287 |         uint24 r = uint24(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint24' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
288 |         uint16 s = uint16(base);
    |                    ------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint16' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
289 |         uint8 t = uint8(base);
    |                   -----------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint8' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
299 |         return uint64(uint128(int128(uint128(a)) + b));
    |                ---------------------------------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint64' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
299 |         return uint64(uint128(int128(uint128(a)) + b));
    |                       -------------------------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'uint128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

warning[unsafe-typecast]: typecasts that can truncate values should be checked
   --> ROOT/testdata/UnsafeTypecast.sol:LL:CC
    |
299 |         return uint64(uint128(int128(uint128(a)) + b));
    |                               ------------------
    |
    = note: Consider disabling this lint if you're certain the cast is safe:
            
            // casting to 'int128' is safe because [explain why]
            // forge-lint: disable-next-line(unsafe-typecast)
            
    = help: https://book.getfoundry.sh/reference/forge/forge-lint#unsafe-typecast

