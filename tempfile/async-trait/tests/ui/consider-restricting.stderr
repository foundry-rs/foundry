error: future cannot be sent between threads safely
  --> tests/ui/consider-restricting.rs:16:49
   |
16 |     async fn publish<T: IntoUrl>(&self, url: T) {}
   |                                                 ^^ future created by async block is not `Send`
   |
note: captured value is not `Send`
  --> tests/ui/consider-restricting.rs:16:41
   |
16 |     async fn publish<T: IntoUrl>(&self, url: T) {}
   |                                         ^^^ has type `T` which is not `Send`
   = note: required for the cast from `Pin<Box<{async block@$DIR/tests/ui/consider-restricting.rs:16:49: 16:51}>>` to `Pin<Box<(dyn Future<Output = ()> + Send + 'async_trait)>>`
help: consider further restricting type parameter `T` with trait `Send`
   |
16 |     async fn publish<T: IntoUrl + std::marker::Send>(&self, url: T) {}
   |                                 +++++++++++++++++++

error: future cannot be sent between threads safely
  --> tests/ui/consider-restricting.rs:23:40
   |
23 |     async fn publish<T>(&self, url: T) {}
   |                                        ^^ future created by async block is not `Send`
   |
note: captured value is not `Send`
  --> tests/ui/consider-restricting.rs:23:32
   |
23 |     async fn publish<T>(&self, url: T) {}
   |                                ^^^ has type `T` which is not `Send`
   = note: required for the cast from `Pin<Box<{async block@$DIR/tests/ui/consider-restricting.rs:23:40: 23:42}>>` to `Pin<Box<(dyn Future<Output = ()> + Send + 'async_trait)>>`
help: consider further restricting type parameter `T` with trait `Send`
   |
23 |     async fn publish<T + std::marker::Send>(&self, url: T) {}
   |                        +++++++++++++++++++
