// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_xml::decode::XmlDecodeError> {
    crate::rest_xml_wrapped_errors::parse_error_metadata(response_body)
}

pub(crate) mod shape_assume_role;

pub(crate) mod shape_assume_role_input;

pub(crate) mod shape_assume_role_with_saml;

pub(crate) mod shape_assume_role_with_saml_input;

pub(crate) mod shape_assume_role_with_web_identity;

pub(crate) mod shape_assume_role_with_web_identity_input;

pub(crate) mod shape_assume_root;

pub(crate) mod shape_assume_root_input;

pub(crate) mod shape_decode_authorization_message;

pub(crate) mod shape_decode_authorization_message_input;

pub(crate) mod shape_get_access_key_info;

pub(crate) mod shape_get_access_key_info_input;

pub(crate) mod shape_get_caller_identity;

pub(crate) mod shape_get_caller_identity_input;

pub(crate) mod shape_get_federation_token;

pub(crate) mod shape_get_federation_token_input;

pub(crate) mod shape_get_session_token;

pub(crate) mod shape_get_session_token_input;

pub(crate) mod shape_expired_token_exception;

pub(crate) mod shape_idp_communication_error_exception;

pub(crate) mod shape_idp_rejected_claim_exception;

pub(crate) mod shape_invalid_authorization_message_exception;

pub(crate) mod shape_invalid_identity_token_exception;

pub(crate) mod shape_malformed_policy_document_exception;

pub(crate) mod shape_packed_policy_too_large_exception;

pub(crate) mod shape_policy_descriptor_type;

pub(crate) mod shape_provided_context;

pub(crate) mod shape_region_disabled_exception;

pub(crate) mod shape_tag;

pub(crate) mod shape_assumed_role_user;

pub(crate) mod shape_credentials;

pub(crate) mod shape_federated_user;
