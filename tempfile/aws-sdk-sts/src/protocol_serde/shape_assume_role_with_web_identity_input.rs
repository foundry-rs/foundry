// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_assume_role_with_web_identity_input_input_input(
    input: &crate::operation::assume_role_with_web_identity::AssumeRoleWithWebIdentityInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "AssumeRoleWithWebIdentity", "2011-06-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("RoleArn");
    if let Some(var_2) = &input.role_arn {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("RoleSessionName");
    if let Some(var_4) = &input.role_session_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("WebIdentityToken");
    if let Some(var_6) = &input.web_identity_token {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("ProviderId");
    if let Some(var_8) = &input.provider_id {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("PolicyArns");
    if let Some(var_10) = &input.policy_arns {
        let mut list_12 = scope_9.start_list(false, None);
        for item_11 in var_10 {
            #[allow(unused_mut)]
            let mut entry_13 = list_12.entry();
            crate::protocol_serde::shape_policy_descriptor_type::ser_policy_descriptor_type(entry_13, item_11)?;
        }
        list_12.finish();
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("Policy");
    if let Some(var_15) = &input.policy {
        scope_14.string(var_15);
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("DurationSeconds");
    if let Some(var_17) = &input.duration_seconds {
        scope_16.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_17).into()),
        );
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
