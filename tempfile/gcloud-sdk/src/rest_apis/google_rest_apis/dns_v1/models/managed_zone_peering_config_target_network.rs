/*
 * Cloud DNS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::dns_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ManagedZonePeeringConfigTargetNetwork {
    /// The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.
    #[serde(rename = "deactivateTime", skip_serializing_if = "Option::is_none")]
    pub deactivate_time: Option<String>,
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    #[serde(rename = "networkUrl", skip_serializing_if = "Option::is_none")]
    pub network_url: Option<String>,
}

impl ManagedZonePeeringConfigTargetNetwork {
    pub fn new() -> ManagedZonePeeringConfigTargetNetwork {
        ManagedZonePeeringConfigTargetNetwork {
            deactivate_time: None,
            kind: None,
            network_url: None,
        }
    }
}
