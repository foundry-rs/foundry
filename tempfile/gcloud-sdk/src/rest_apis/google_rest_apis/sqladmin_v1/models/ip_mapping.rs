/*
 * Cloud SQL Admin API
 *
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::sqladmin_v1::models;
use serde::{Deserialize, Serialize};

/// IpMapping : Database instance IP Mapping.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpMapping {
    /// The IP address assigned.
    #[serde(rename = "ipAddress", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<String>,
    /// The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.
    #[serde(rename = "timeToRetire", skip_serializing_if = "Option::is_none")]
    pub time_to_retire: Option<String>,
    /// The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl IpMapping {
    /// Database instance IP Mapping.
    pub fn new() -> IpMapping {
        IpMapping {
            ip_address: None,
            time_to_retire: None,
            r#type: None,
        }
    }
}
/// The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SQL_IP_ADDRESS_TYPE_UNSPECIFIED")]
    SqlIpAddressTypeUnspecified,
    #[serde(rename = "PRIMARY")]
    Primary,
    #[serde(rename = "OUTGOING")]
    Outgoing,
    #[serde(rename = "PRIVATE")]
    Private,
    #[serde(rename = "MIGRATED_1ST_GEN")]
    Migrated1StGen,
}

impl Default for Type {
    fn default() -> Type {
        Self::SqlIpAddressTypeUnspecified
    }
}
