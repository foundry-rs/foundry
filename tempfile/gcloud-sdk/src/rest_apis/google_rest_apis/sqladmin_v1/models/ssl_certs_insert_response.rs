/*
 * Cloud SQL Admin API
 *
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::sqladmin_v1::models;
use serde::{Deserialize, Serialize};

/// SslCertsInsertResponse : SslCert insert response.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SslCertsInsertResponse {
    #[serde(rename = "clientCert", skip_serializing_if = "Option::is_none")]
    pub client_cert: Option<Box<models::SslCertDetail>>,
    /// This is always `sql#sslCertsInsert`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<Box<models::Operation>>,
    #[serde(rename = "serverCaCert", skip_serializing_if = "Option::is_none")]
    pub server_ca_cert: Option<Box<models::SslCert>>,
}

impl SslCertsInsertResponse {
    /// SslCert insert response.
    pub fn new() -> SslCertsInsertResponse {
        SslCertsInsertResponse {
            client_cert: None,
            kind: None,
            operation: None,
            server_ca_cert: None,
        }
    }
}
