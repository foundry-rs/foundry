/*
 * Cloud SQL Admin API
 *
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::sqladmin_v1::models;
use serde::{Deserialize, Serialize};

/// SqlInstancesVerifyExternalSyncSettingsResponse : Instance verify external sync settings response.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SqlInstancesVerifyExternalSyncSettingsResponse {
    /// List of migration violations.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::SqlExternalSyncSettingError>>,
    /// This is always `sql#migrationSettingErrorList`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// List of migration warnings.
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::SqlExternalSyncSettingError>>,
}

impl SqlInstancesVerifyExternalSyncSettingsResponse {
    /// Instance verify external sync settings response.
    pub fn new() -> SqlInstancesVerifyExternalSyncSettingsResponse {
        SqlInstancesVerifyExternalSyncSettingsResponse {
            errors: None,
            kind: None,
            warnings: None,
        }
    }
}
