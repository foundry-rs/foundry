/*
 * Cloud SQL Admin API
 *
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::sqladmin_v1::models;
use serde::{Deserialize, Serialize};

/// OperationErrors : Database instance operation errors list wrapper.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OperationErrors {
    /// The list of errors encountered while processing this operation.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::OperationError>>,
    /// This is always `sql#operationErrors`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
}

impl OperationErrors {
    /// Database instance operation errors list wrapper.
    pub fn new() -> OperationErrors {
        OperationErrors {
            errors: None,
            kind: None,
        }
    }
}
