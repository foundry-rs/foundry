/*
 * Cloud SQL Admin API
 *
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::sqladmin_v1::models;
use serde::{Deserialize, Serialize};

/// BackupContext : Backup context.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BackupContext {
    /// The identifier of the backup.
    #[serde(rename = "backupId", skip_serializing_if = "Option::is_none")]
    pub backup_id: Option<String>,
    /// This is always `sql#backupContext`.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
}

impl BackupContext {
    /// Backup context.
    pub fn new() -> BackupContext {
        BackupContext {
            backup_id: None,
            kind: None,
        }
    }
}
