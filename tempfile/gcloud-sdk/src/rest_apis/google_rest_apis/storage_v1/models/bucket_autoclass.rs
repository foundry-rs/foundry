/*
 * Cloud Storage JSON API
 *
 * Stores and retrieves potentially large, immutable data objects.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::storage_v1::models;
use serde::{Deserialize, Serialize};

/// BucketAutoclass : The bucket's Autoclass configuration.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BucketAutoclass {
    /// Whether or not Autoclass is enabled on this bucket
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Valid values are NEARLINE and ARCHIVE.
    #[serde(
        rename = "terminalStorageClass",
        skip_serializing_if = "Option::is_none"
    )]
    pub terminal_storage_class: Option<String>,
    /// A date and time in RFC 3339 format representing the time of the most recent update to \"terminalStorageClass\".
    #[serde(
        rename = "terminalStorageClassUpdateTime",
        skip_serializing_if = "Option::is_none"
    )]
    pub terminal_storage_class_update_time: Option<String>,
    /// A date and time in RFC 3339 format representing the instant at which \"enabled\" was last toggled.
    #[serde(rename = "toggleTime", skip_serializing_if = "Option::is_none")]
    pub toggle_time: Option<String>,
}

impl BucketAutoclass {
    /// The bucket's Autoclass configuration.
    pub fn new() -> BucketAutoclass {
        BucketAutoclass {
            enabled: None,
            terminal_storage_class: None,
            terminal_storage_class_update_time: None,
            toggle_time: None,
        }
    }
}
