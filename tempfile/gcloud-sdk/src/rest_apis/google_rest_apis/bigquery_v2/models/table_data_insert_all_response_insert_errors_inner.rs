/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableDataInsertAllResponseInsertErrorsInner {
    /// Error information for the row indicated by the index property.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<models::ErrorProto>>,
    /// The index of the row that error applies to.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
}

impl TableDataInsertAllResponseInsertErrorsInner {
    pub fn new() -> TableDataInsertAllResponseInsertErrorsInner {
        TableDataInsertAllResponseInsertErrorsInner {
            errors: None,
            index: None,
        }
    }
}
