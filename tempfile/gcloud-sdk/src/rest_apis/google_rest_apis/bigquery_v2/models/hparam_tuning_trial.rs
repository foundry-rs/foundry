/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

/// HparamTuningTrial : Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HparamTuningTrial {
    /// Ending time of the trial.
    #[serde(rename = "endTimeMs", skip_serializing_if = "Option::is_none")]
    pub end_time_ms: Option<String>,
    /// Error message for FAILED and INFEASIBLE trial.
    #[serde(rename = "errorMessage", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    /// Loss computed on the eval data at the end of trial.
    #[serde(rename = "evalLoss", skip_serializing_if = "Option::is_none")]
    pub eval_loss: Option<f64>,
    #[serde(rename = "evaluationMetrics", skip_serializing_if = "Option::is_none")]
    pub evaluation_metrics: Option<Box<models::EvaluationMetrics>>,
    #[serde(
        rename = "hparamTuningEvaluationMetrics",
        skip_serializing_if = "Option::is_none"
    )]
    pub hparam_tuning_evaluation_metrics: Option<Box<models::EvaluationMetrics>>,
    #[serde(rename = "hparams", skip_serializing_if = "Option::is_none")]
    pub hparams: Option<Box<models::TrainingOptions>>,
    /// Starting time of the trial.
    #[serde(rename = "startTimeMs", skip_serializing_if = "Option::is_none")]
    pub start_time_ms: Option<String>,
    /// The status of the trial.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// Loss computed on the training data at the end of trial.
    #[serde(rename = "trainingLoss", skip_serializing_if = "Option::is_none")]
    pub training_loss: Option<f64>,
    /// 1-based index of the trial.
    #[serde(rename = "trialId", skip_serializing_if = "Option::is_none")]
    pub trial_id: Option<String>,
}

impl HparamTuningTrial {
    /// Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
    pub fn new() -> HparamTuningTrial {
        HparamTuningTrial {
            end_time_ms: None,
            error_message: None,
            eval_loss: None,
            evaluation_metrics: None,
            hparam_tuning_evaluation_metrics: None,
            hparams: None,
            start_time_ms: None,
            status: None,
            training_loss: None,
            trial_id: None,
        }
    }
}
/// The status of the trial.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "TRIAL_STATUS_UNSPECIFIED")]
    TrialStatusUnspecified,
    #[serde(rename = "NOT_STARTED")]
    NotStarted,
    #[serde(rename = "RUNNING")]
    Running,
    #[serde(rename = "SUCCEEDED")]
    Succeeded,
    #[serde(rename = "FAILED")]
    Failed,
    #[serde(rename = "INFEASIBLE")]
    Infeasible,
    #[serde(rename = "STOPPED_EARLY")]
    StoppedEarly,
}

impl Default for Status {
    fn default() -> Status {
        Self::TrialStatusUnspecified
    }
}
