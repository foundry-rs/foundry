/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableDataInsertAllResponse {
    /// An array of errors for rows that were not inserted.
    #[serde(rename = "insertErrors", skip_serializing_if = "Option::is_none")]
    pub insert_errors: Option<Vec<models::TableDataInsertAllResponseInsertErrorsInner>>,
    /// The resource type of the response.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
}

impl TableDataInsertAllResponse {
    pub fn new() -> TableDataInsertAllResponse {
        TableDataInsertAllResponse {
            insert_errors: None,
            kind: None,
        }
    }
}
