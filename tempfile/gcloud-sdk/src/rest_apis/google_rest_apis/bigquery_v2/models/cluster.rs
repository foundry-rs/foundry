/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

/// Cluster : Message containing the information about one cluster.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Cluster {
    /// Centroid id.
    #[serde(rename = "centroidId", skip_serializing_if = "Option::is_none")]
    pub centroid_id: Option<String>,
    /// Count of training data rows that were assigned to this cluster.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<String>,
    /// Values of highly variant features for this cluster.
    #[serde(rename = "featureValues", skip_serializing_if = "Option::is_none")]
    pub feature_values: Option<Vec<models::FeatureValue>>,
}

impl Cluster {
    /// Message containing the information about one cluster.
    pub fn new() -> Cluster {
        Cluster {
            centroid_id: None,
            count: None,
            feature_values: None,
        }
    }
}
