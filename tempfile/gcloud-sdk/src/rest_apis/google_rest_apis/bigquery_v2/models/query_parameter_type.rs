/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryParameterType {
    #[serde(rename = "arrayType", skip_serializing_if = "Option::is_none")]
    pub array_type: Option<Box<models::QueryParameterType>>,
    /// [Optional] The types of the fields of this struct, in order, if this is a struct.
    #[serde(rename = "structTypes", skip_serializing_if = "Option::is_none")]
    pub struct_types: Option<Vec<models::QueryParameterTypeStructTypesInner>>,
    /// [Required] The top level type of this field.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl QueryParameterType {
    pub fn new() -> QueryParameterType {
        QueryParameterType {
            array_type: None,
            struct_types: None,
            r#type: None,
        }
    }
}
