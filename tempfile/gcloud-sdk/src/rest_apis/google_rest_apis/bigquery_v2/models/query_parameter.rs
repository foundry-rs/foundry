/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryParameter {
    /// [Optional] If unset, this is a positional parameter. Otherwise, should be unique within a query.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "parameterType", skip_serializing_if = "Option::is_none")]
    pub parameter_type: Option<Box<models::QueryParameterType>>,
    #[serde(rename = "parameterValue", skip_serializing_if = "Option::is_none")]
    pub parameter_value: Option<Box<models::QueryParameterValue>>,
}

impl QueryParameter {
    pub fn new() -> QueryParameter {
        QueryParameter {
            name: None,
            parameter_type: None,
            parameter_value: None,
        }
    }
}
