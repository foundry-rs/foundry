/*
 * BigQuery API
 *
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::bigquery_v2::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableDataInsertAllRequestRowsInner {
    /// [Optional] A unique ID for each row. BigQuery uses this property to detect duplicate insertion requests on a best-effort basis.
    #[serde(rename = "insertId", skip_serializing_if = "Option::is_none")]
    pub insert_id: Option<String>,
    /// Represents a single JSON object.
    #[serde(rename = "json", skip_serializing_if = "Option::is_none")]
    pub json: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl TableDataInsertAllRequestRowsInner {
    pub fn new() -> TableDataInsertAllRequestRowsInner {
        TableDataInsertAllRequestRowsInner {
            insert_id: None,
            json: None,
        }
    }
}
