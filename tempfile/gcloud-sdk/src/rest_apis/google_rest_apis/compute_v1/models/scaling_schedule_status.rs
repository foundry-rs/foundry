/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScalingScheduleStatus {
    /// [Output Only] The last time the scaling schedule became active. Note: this is a timestamp when a schedule actually became active, not when it was planned to do so. The timestamp is in RFC3339 text format.
    #[serde(rename = "lastStartTime", skip_serializing_if = "Option::is_none")]
    pub last_start_time: Option<String>,
    /// [Output Only] The next time the scaling schedule is to become active. Note: this is a timestamp when a schedule is planned to run, but the actual time might be slightly different. The timestamp is in RFC3339 text format.
    #[serde(rename = "nextStartTime", skip_serializing_if = "Option::is_none")]
    pub next_start_time: Option<String>,
    /// [Output Only] The current state of a scaling schedule.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
}

impl ScalingScheduleStatus {
    pub fn new() -> ScalingScheduleStatus {
        ScalingScheduleStatus {
            last_start_time: None,
            next_start_time: None,
            state: None,
        }
    }
}
/// [Output Only] The current state of a scaling schedule.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "ACTIVE")]
    Active,
    #[serde(rename = "DISABLED")]
    Disabled,
    #[serde(rename = "OBSOLETE")]
    Obsolete,
    #[serde(rename = "READY")]
    Ready,
}

impl Default for State {
    fn default() -> State {
        Self::Active
    }
}
