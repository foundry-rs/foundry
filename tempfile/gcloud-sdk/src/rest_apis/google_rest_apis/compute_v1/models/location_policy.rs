/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// LocationPolicy : Configuration for location policy among multiple possible locations (e.g. preferences for zone selection among zones in a single region).
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LocationPolicy {
    /// Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.
    #[serde(rename = "locations", skip_serializing_if = "Option::is_none")]
    pub locations: Option<std::collections::HashMap<String, models::LocationPolicyLocation>>,
    /// Strategy for distributing VMs across zones in a region.
    #[serde(rename = "targetShape", skip_serializing_if = "Option::is_none")]
    pub target_shape: Option<TargetShape>,
}

impl LocationPolicy {
    /// Configuration for location policy among multiple possible locations (e.g. preferences for zone selection among zones in a single region).
    pub fn new() -> LocationPolicy {
        LocationPolicy {
            locations: None,
            target_shape: None,
        }
    }
}
/// Strategy for distributing VMs across zones in a region.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TargetShape {
    #[serde(rename = "ANY")]
    Any,
    #[serde(rename = "ANY_SINGLE_ZONE")]
    AnySingleZone,
    #[serde(rename = "BALANCED")]
    Balanced,
}

impl Default for TargetShape {
    fn default() -> TargetShape {
        Self::Any
    }
}
