/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// LicenseResourceCommitment : Commitment for a particular license resource.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LicenseResourceCommitment {
    /// The number of licenses purchased.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// Specifies the core range of the instance for which this license applies.
    #[serde(rename = "coresPerLicense", skip_serializing_if = "Option::is_none")]
    pub cores_per_license: Option<String>,
    /// Any applicable license URI.
    #[serde(rename = "license", skip_serializing_if = "Option::is_none")]
    pub license: Option<String>,
}

impl LicenseResourceCommitment {
    /// Commitment for a particular license resource.
    pub fn new() -> LicenseResourceCommitment {
        LicenseResourceCommitment {
            amount: None,
            cores_per_license: None,
            license: None,
        }
    }
}
