/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// SchedulingNodeAffinity : Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SchedulingNodeAffinity {
    /// Corresponds to the label key of Node resource.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<Operator>,
    /// Corresponds to the label values of Node resource.
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
}

impl SchedulingNodeAffinity {
    /// Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled.
    pub fn new() -> SchedulingNodeAffinity {
        SchedulingNodeAffinity {
            key: None,
            operator: None,
            values: None,
        }
    }
}
/// Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operator {
    #[serde(rename = "IN")]
    In,
    #[serde(rename = "NOT_IN")]
    NotIn,
    #[serde(rename = "OPERATOR_UNSPECIFIED")]
    OperatorUnspecified,
}

impl Default for Operator {
    fn default() -> Operator {
        Self::In
    }
}
