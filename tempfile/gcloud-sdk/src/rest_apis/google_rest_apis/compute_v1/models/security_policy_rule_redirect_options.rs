/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecurityPolicyRuleRedirectOptions {
    /// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<String>,
    /// Type of the redirect action.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl SecurityPolicyRuleRedirectOptions {
    pub fn new() -> SecurityPolicyRuleRedirectOptions {
        SecurityPolicyRuleRedirectOptions {
            target: None,
            r#type: None,
        }
    }
}
/// Type of the redirect action.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "EXTERNAL_302")]
    External302,
    #[serde(rename = "GOOGLE_RECAPTCHA")]
    GoogleRecaptcha,
}

impl Default for Type {
    fn default() -> Type {
        Self::External302
    }
}
