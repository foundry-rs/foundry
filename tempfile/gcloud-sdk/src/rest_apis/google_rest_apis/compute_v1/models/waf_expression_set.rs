/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WafExpressionSet {
    /// A list of alternate IDs. The format should be: - E.g. XSS-stable Generic suffix like \"stable\" is particularly useful if a policy likes to avail newer set of expressions without having to change the policy. A given alias name can't be used for more than one entity set.
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<Vec<String>>,
    /// List of available expressions.
    #[serde(rename = "expressions", skip_serializing_if = "Option::is_none")]
    pub expressions: Option<Vec<models::WafExpressionSetExpression>>,
    /// Google specified expression set ID. The format should be: - E.g. XSS-20170329 required
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl WafExpressionSet {
    pub fn new() -> WafExpressionSet {
        WafExpressionSet {
            aliases: None,
            expressions: None,
            id: None,
        }
    }
}
