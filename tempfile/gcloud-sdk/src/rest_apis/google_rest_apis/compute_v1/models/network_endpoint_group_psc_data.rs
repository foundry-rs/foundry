/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// NetworkEndpointGroupPscData : All data that is specifically relevant to only network endpoint groups of type PRIVATE_SERVICE_CONNECT.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkEndpointGroupPscData {
    /// [Output Only] Address allocated from given subnetwork for PSC. This IP address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7 PSC-XLB.
    #[serde(rename = "consumerPscAddress", skip_serializing_if = "Option::is_none")]
    pub consumer_psc_address: Option<String>,
    /// [Output Only] The PSC connection id of the PSC Network Endpoint Group Consumer.
    #[serde(rename = "pscConnectionId", skip_serializing_if = "Option::is_none")]
    pub psc_connection_id: Option<String>,
    /// [Output Only] The connection status of the PSC Forwarding Rule.
    #[serde(
        rename = "pscConnectionStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub psc_connection_status: Option<PscConnectionStatus>,
}

impl NetworkEndpointGroupPscData {
    /// All data that is specifically relevant to only network endpoint groups of type PRIVATE_SERVICE_CONNECT.
    pub fn new() -> NetworkEndpointGroupPscData {
        NetworkEndpointGroupPscData {
            consumer_psc_address: None,
            psc_connection_id: None,
            psc_connection_status: None,
        }
    }
}
/// [Output Only] The connection status of the PSC Forwarding Rule.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PscConnectionStatus {
    #[serde(rename = "ACCEPTED")]
    Accepted,
    #[serde(rename = "CLOSED")]
    Closed,
    #[serde(rename = "NEEDS_ATTENTION")]
    NeedsAttention,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "REJECTED")]
    Rejected,
    #[serde(rename = "STATUS_UNSPECIFIED")]
    StatusUnspecified,
}

impl Default for PscConnectionStatus {
    fn default() -> PscConnectionStatus {
        Self::Accepted
    }
}
