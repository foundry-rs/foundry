/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LocationPolicyLocation {
    #[serde(rename = "constraints", skip_serializing_if = "Option::is_none")]
    pub constraints: Option<Box<models::LocationPolicyLocationConstraints>>,
    /// Preference for a given location. Set to either ALLOW or DENY.
    #[serde(rename = "preference", skip_serializing_if = "Option::is_none")]
    pub preference: Option<Preference>,
}

impl LocationPolicyLocation {
    pub fn new() -> LocationPolicyLocation {
        LocationPolicyLocation {
            constraints: None,
            preference: None,
        }
    }
}
/// Preference for a given location. Set to either ALLOW or DENY.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Preference {
    #[serde(rename = "ALLOW")]
    Allow,
    #[serde(rename = "DENY")]
    Deny,
    #[serde(rename = "PREFERENCE_UNSPECIFIED")]
    PreferenceUnspecified,
}

impl Default for Preference {
    fn default() -> Preference {
        Self::Allow
    }
}
