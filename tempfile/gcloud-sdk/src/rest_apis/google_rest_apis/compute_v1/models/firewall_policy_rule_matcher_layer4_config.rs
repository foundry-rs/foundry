/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FirewallPolicyRuleMatcherLayer4Config {
    /// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    #[serde(rename = "ipProtocol", skip_serializing_if = "Option::is_none")]
    pub ip_protocol: Option<String>,
    /// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].
    #[serde(rename = "ports", skip_serializing_if = "Option::is_none")]
    pub ports: Option<Vec<String>>,
}

impl FirewallPolicyRuleMatcherLayer4Config {
    pub fn new() -> FirewallPolicyRuleMatcherLayer4Config {
        FirewallPolicyRuleMatcherLayer4Config {
            ip_protocol: None,
            ports: None,
        }
    }
}
