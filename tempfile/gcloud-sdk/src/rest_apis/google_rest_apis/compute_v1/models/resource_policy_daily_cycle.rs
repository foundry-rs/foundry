/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// ResourcePolicyDailyCycle : Time window specified for daily operations.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResourcePolicyDailyCycle {
    /// Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle.
    #[serde(rename = "daysInCycle", skip_serializing_if = "Option::is_none")]
    pub days_in_cycle: Option<i32>,
    /// [Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<String>,
    /// Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
}

impl ResourcePolicyDailyCycle {
    /// Time window specified for daily operations.
    pub fn new() -> ResourcePolicyDailyCycle {
        ResourcePolicyDailyCycle {
            days_in_cycle: None,
            duration: None,
            start_time: None,
        }
    }
}
