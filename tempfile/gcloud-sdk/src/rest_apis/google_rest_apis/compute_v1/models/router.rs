/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// Router : Represents a Cloud Router resource. For more information about Cloud Router, read the Cloud Router overview.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Router {
    #[serde(rename = "bgp", skip_serializing_if = "Option::is_none")]
    pub bgp: Option<Box<models::RouterBgp>>,
    /// BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
    #[serde(rename = "bgpPeers", skip_serializing_if = "Option::is_none")]
    pub bgp_peers: Option<Vec<models::RouterBgpPeer>>,
    /// [Output Only] Creation timestamp in RFC3339 text format.
    #[serde(rename = "creationTimestamp", skip_serializing_if = "Option::is_none")]
    pub creation_timestamp: Option<String>,
    /// An optional description of this resource. Provide this property when you create the resource.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments).
    #[serde(
        rename = "encryptedInterconnectRouter",
        skip_serializing_if = "Option::is_none"
    )]
    pub encrypted_interconnect_router: Option<bool>,
    /// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Router interfaces. To create a BGP peer that uses a router interface, the interface must have one of the following fields specified: - linkedVpnTunnel - linkedInterconnectAttachment - subnetwork You can create a router interface without any of these fields specified. However, you cannot create a BGP peer that uses that interface.
    #[serde(rename = "interfaces", skip_serializing_if = "Option::is_none")]
    pub interfaces: Option<Vec<models::RouterInterface>>,
    /// [Output Only] Type of resource. Always compute#router for routers.
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    /// Keys used for MD5 authentication.
    #[serde(
        rename = "md5AuthenticationKeys",
        skip_serializing_if = "Option::is_none"
    )]
    pub md5_authentication_keys: Option<Vec<models::RouterMd5AuthenticationKey>>,
    /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A list of NAT services created in this router.
    #[serde(rename = "nats", skip_serializing_if = "Option::is_none")]
    pub nats: Option<Vec<models::RouterNat>>,
    /// URI of the network to which this router belongs.
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    /// [Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// [Output Only] Server-defined URL for the resource.
    #[serde(rename = "selfLink", skip_serializing_if = "Option::is_none")]
    pub self_link: Option<String>,
}

impl Router {
    /// Represents a Cloud Router resource. For more information about Cloud Router, read the Cloud Router overview.
    pub fn new() -> Router {
        Router {
            bgp: None,
            bgp_peers: None,
            creation_timestamp: None,
            description: None,
            encrypted_interconnect_router: None,
            id: None,
            interfaces: None,
            kind: None,
            md5_authentication_keys: None,
            name: None,
            nats: None,
            network: None,
            region: None,
            self_link: None,
        }
    }
}
