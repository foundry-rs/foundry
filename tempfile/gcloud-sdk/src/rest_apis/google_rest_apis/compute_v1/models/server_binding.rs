/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerBinding {
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl ServerBinding {
    pub fn new() -> ServerBinding {
        ServerBinding { r#type: None }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "RESTART_NODE_ON_ANY_SERVER")]
    RestartNodeOnAnyServer,
    #[serde(rename = "RESTART_NODE_ON_MINIMAL_SERVERS")]
    RestartNodeOnMinimalServers,
    #[serde(rename = "SERVER_BINDING_TYPE_UNSPECIFIED")]
    ServerBindingTypeUnspecified,
}

impl Default for Type {
    fn default() -> Type {
        Self::RestartNodeOnAnyServer
    }
}
