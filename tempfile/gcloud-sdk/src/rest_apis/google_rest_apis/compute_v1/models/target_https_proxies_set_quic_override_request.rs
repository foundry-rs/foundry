/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TargetHttpsProxiesSetQuicOverrideRequest {
    /// QUIC policy for the TargetHttpsProxy resource.
    #[serde(rename = "quicOverride", skip_serializing_if = "Option::is_none")]
    pub quic_override: Option<QuicOverride>,
}

impl TargetHttpsProxiesSetQuicOverrideRequest {
    pub fn new() -> TargetHttpsProxiesSetQuicOverrideRequest {
        TargetHttpsProxiesSetQuicOverrideRequest {
            quic_override: None,
        }
    }
}
/// QUIC policy for the TargetHttpsProxy resource.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum QuicOverride {
    #[serde(rename = "DISABLE")]
    Disable,
    #[serde(rename = "ENABLE")]
    Enable,
    #[serde(rename = "NONE")]
    None,
}

impl Default for QuicOverride {
    fn default() -> QuicOverride {
        Self::Disable
    }
}
