/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// SourceInstanceProperties : DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SourceInstanceProperties {
    /// Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
    #[serde(rename = "canIpForward", skip_serializing_if = "Option::is_none")]
    pub can_ip_forward: Option<bool>,
    /// Whether the instance created from this machine image should be protected against deletion.
    #[serde(rename = "deletionProtection", skip_serializing_if = "Option::is_none")]
    pub deletion_protection: Option<bool>,
    /// An optional text description for the instances that are created from this machine image.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// An array of disks that are associated with the instances that are created from this machine image.
    #[serde(rename = "disks", skip_serializing_if = "Option::is_none")]
    pub disks: Option<Vec<models::SavedAttachedDisk>>,
    /// A list of guest accelerator cards' type and count to use for instances created from this machine image.
    #[serde(rename = "guestAccelerators", skip_serializing_if = "Option::is_none")]
    pub guest_accelerators: Option<Vec<models::AcceleratorConfig>>,
    /// KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.
    #[serde(
        rename = "keyRevocationActionType",
        skip_serializing_if = "Option::is_none"
    )]
    pub key_revocation_action_type: Option<KeyRevocationActionType>,
    /// Labels to apply to instances that are created from this machine image.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    /// The machine type to use for instances that are created from this machine image.
    #[serde(rename = "machineType", skip_serializing_if = "Option::is_none")]
    pub machine_type: Option<String>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<models::Metadata>>,
    /// Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\". For more information, read Specifying a Minimum CPU Platform.
    #[serde(rename = "minCpuPlatform", skip_serializing_if = "Option::is_none")]
    pub min_cpu_platform: Option<String>,
    /// An array of network access configurations for this interface.
    #[serde(rename = "networkInterfaces", skip_serializing_if = "Option::is_none")]
    pub network_interfaces: Option<Vec<models::NetworkInterface>>,
    #[serde(rename = "scheduling", skip_serializing_if = "Option::is_none")]
    pub scheduling: Option<Box<models::Scheduling>>,
    /// A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
    #[serde(rename = "serviceAccounts", skip_serializing_if = "Option::is_none")]
    pub service_accounts: Option<Vec<models::ServiceAccount>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Box<models::Tags>>,
}

impl SourceInstanceProperties {
    /// DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
    pub fn new() -> SourceInstanceProperties {
        SourceInstanceProperties {
            can_ip_forward: None,
            deletion_protection: None,
            description: None,
            disks: None,
            guest_accelerators: None,
            key_revocation_action_type: None,
            labels: None,
            machine_type: None,
            metadata: None,
            min_cpu_platform: None,
            network_interfaces: None,
            scheduling: None,
            service_accounts: None,
            tags: None,
        }
    }
}
/// KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum KeyRevocationActionType {
    #[serde(rename = "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")]
    KeyRevocationActionTypeUnspecified,
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "STOP")]
    Stop,
}

impl Default for KeyRevocationActionType {
    fn default() -> KeyRevocationActionType {
        Self::KeyRevocationActionTypeUnspecified
    }
}
