/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// HostRule : UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HostRule {
    /// An optional description of this resource. Provide this property when you create the resource.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The list of host patterns to match. They must be valid hostnames with optional port numbers in the format host:port. * matches any string of ([a-z0-9-.]*). In that case, * must be the first character, and if followed by anything, the immediate following character must be either - or .. * based matching is not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
    #[serde(rename = "hosts", skip_serializing_if = "Option::is_none")]
    pub hosts: Option<Vec<String>>,
    /// The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
    #[serde(rename = "pathMatcher", skip_serializing_if = "Option::is_none")]
    pub path_matcher: Option<String>,
}

impl HostRule {
    /// UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.
    pub fn new() -> HostRule {
        HostRule {
            description: None,
            hosts: None,
            path_matcher: None,
        }
    }
}
