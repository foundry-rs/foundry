/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileContentBuffer {
    /// The raw content in the secure keys file.
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<u8>>,
    /// The file type of source file.
    #[serde(rename = "fileType", skip_serializing_if = "Option::is_none")]
    pub file_type: Option<FileType>,
}

impl FileContentBuffer {
    pub fn new() -> FileContentBuffer {
        FileContentBuffer {
            content: None,
            file_type: None,
        }
    }
}
/// The file type of source file.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FileType {
    #[serde(rename = "BIN")]
    Bin,
    #[serde(rename = "UNDEFINED")]
    Undefined,
    #[serde(rename = "X509")]
    X509,
}

impl Default for FileType {
    fn default() -> FileType {
        Self::Bin
    }
}
