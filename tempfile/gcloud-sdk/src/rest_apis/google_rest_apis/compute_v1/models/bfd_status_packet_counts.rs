/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BfdStatusPacketCounts {
    /// Number of packets received since the beginning of the current BFD session.
    #[serde(rename = "numRx", skip_serializing_if = "Option::is_none")]
    pub num_rx: Option<i32>,
    /// Number of packets received that were rejected because of errors since the beginning of the current BFD session.
    #[serde(rename = "numRxRejected", skip_serializing_if = "Option::is_none")]
    pub num_rx_rejected: Option<i32>,
    /// Number of packets received that were successfully processed since the beginning of the current BFD session.
    #[serde(rename = "numRxSuccessful", skip_serializing_if = "Option::is_none")]
    pub num_rx_successful: Option<i32>,
    /// Number of packets transmitted since the beginning of the current BFD session.
    #[serde(rename = "numTx", skip_serializing_if = "Option::is_none")]
    pub num_tx: Option<i32>,
}

impl BfdStatusPacketCounts {
    pub fn new() -> BfdStatusPacketCounts {
        BfdStatusPacketCounts {
            num_rx: None,
            num_rx_rejected: None,
            num_rx_successful: None,
            num_tx: None,
        }
    }
}
