/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// HttpFaultInjection : The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by the load balancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HttpFaultInjection {
    #[serde(rename = "abort", skip_serializing_if = "Option::is_none")]
    pub abort: Option<Box<models::HttpFaultAbort>>,
    #[serde(rename = "delay", skip_serializing_if = "Option::is_none")]
    pub delay: Option<Box<models::HttpFaultDelay>>,
}

impl HttpFaultInjection {
    /// The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by the load balancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
    pub fn new() -> HttpFaultInjection {
        HttpFaultInjection {
            abort: None,
            delay: None,
        }
    }
}
