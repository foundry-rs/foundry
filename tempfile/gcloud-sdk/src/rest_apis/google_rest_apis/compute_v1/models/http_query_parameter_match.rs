/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

/// HttpQueryParameterMatch : HttpRouteRuleMatch criteria for a request's query parameter.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HttpQueryParameterMatch {
    /// The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch, or regexMatch must be set.
    #[serde(rename = "exactMatch", skip_serializing_if = "Option::is_none")]
    pub exact_match: Option<String>,
    /// The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch, or regexMatch must be set.
    #[serde(rename = "presentMatch", skip_serializing_if = "Option::is_none")]
    pub present_match: Option<bool>,
    /// The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For more information about regular expression syntax, see Syntax. Only one of presentMatch, exactMatch, or regexMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
    #[serde(rename = "regexMatch", skip_serializing_if = "Option::is_none")]
    pub regex_match: Option<String>,
}

impl HttpQueryParameterMatch {
    /// HttpRouteRuleMatch criteria for a request's query parameter.
    pub fn new() -> HttpQueryParameterMatch {
        HttpQueryParameterMatch {
            exact_match: None,
            name: None,
            present_match: None,
            regex_match: None,
        }
    }
}
