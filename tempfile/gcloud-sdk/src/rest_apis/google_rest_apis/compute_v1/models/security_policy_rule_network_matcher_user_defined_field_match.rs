/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
    /// Name of the user-defined field, as given in the definition.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with \"0x\") number (e.g. \"64\") or range (e.g. \"0x400-0x7ff\").
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
}

impl SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
    pub fn new() -> SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
        SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
            name: None,
            values: None,
        }
    }
}
