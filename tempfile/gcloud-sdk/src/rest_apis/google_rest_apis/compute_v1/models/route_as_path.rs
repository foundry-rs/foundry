/*
 * Compute Engine API
 *
 * Creates and runs virtual machines on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::google_rest_apis::compute_v1::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RouteAsPath {
    /// [Output Only] The AS numbers of the AS Path.
    #[serde(rename = "asLists", skip_serializing_if = "Option::is_none")]
    pub as_lists: Option<Vec<i32>>,
    /// [Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed
    #[serde(rename = "pathSegmentType", skip_serializing_if = "Option::is_none")]
    pub path_segment_type: Option<PathSegmentType>,
}

impl RouteAsPath {
    pub fn new() -> RouteAsPath {
        RouteAsPath {
            as_lists: None,
            path_segment_type: None,
        }
    }
}
/// [Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PathSegmentType {
    #[serde(rename = "AS_CONFED_SEQUENCE")]
    ConfedSequence,
    #[serde(rename = "AS_CONFED_SET")]
    ConfedSet,
    #[serde(rename = "AS_SEQUENCE")]
    Sequence,
    #[serde(rename = "AS_SET")]
    Set,
}

impl Default for PathSegmentType {
    fn default() -> PathSegmentType {
        Self::ConfedSequence
    }
}
