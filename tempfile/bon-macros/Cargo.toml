# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.59.0"
name = "bon-macros"
version = "3.3.2"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
This is a proc-macro crate that is supposed to be a private implementation
detail of the `bon` crate
"""
homepage = "https://bon-rs.com/"
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/elastio/bon"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--generate-link-to-definition"]
targets = ["x86_64-unknown-linux-gnu"]

[lib]
name = "bon_macros"
path = "src/lib.rs"
proc-macro = true

[dependencies.darling]
version = "0.20.10"

[dependencies.ident_case]
version = "1"

[dependencies.prettyplease]
version = "0.2"

[dependencies.proc-macro2]
version = "1.0.88"

[dependencies.quote]
version = "1"

[dependencies.rustversion]
version = "1.0"

[dependencies.syn]
version = "2.0.56"
features = [
    "full",
    "visit-mut",
    "visit",
]

[dev-dependencies.expect-test]
version = "1.4.1"

[features]
default = []
experimental-getter = []
experimental-overwritable = []
implied-bounds = []

[lints.clippy]
assertions_on_result_states = "warn"
await_holding_refcell_ref = "warn"
bool_to_int_with_if = "warn"
borrow_as_ptr = "warn"
branches_sharing_code = "warn"
cast_lossless = "warn"
cast_ptr_alignment = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
collection_is_never_read = "warn"
copy_iterator = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
default_union_representation = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_drop = "warn"
empty_line_after_doc_comments = "warn"
empty_line_after_outer_attr = "warn"
expl_impl_clone_on_copy = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
implicit_saturating_sub = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
invalid_upcast_comparisons = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_include_file = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
manual_clamp = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "allow"
manual_ok_or = "warn"
many_single_char_names = "warn"
map_flatten = "warn"
map_unwrap_or = "allow"
match_on_vec_items = "warn"
match_wild_err_arm = "warn"
maybe_infinite_iter = "warn"
mixed_read_write_in_expression = "warn"
mut_mut = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_continue = "warn"
needless_for_each = "warn"
negative_feature_names = "warn"
no_effect_underscore_binding = "warn"
no_mangle_with_rust_abi = "warn"
non_send_fields_in_send_ty = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
redundant_feature_names = "warn"
ref_binding_to_reference = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
suspicious_xor_used_as_pow = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_ptr_to_ptr = "warn"
transmute_undefined_repr = "warn"
try_err = "warn"
type_repetition_in_bounds = "warn"
unchecked_duration_subtraction = "warn"
unicode_not_nfc = "warn"
unnecessary_join = "warn"
unnecessary_self_imports = "warn"
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"
useless_transmute = "warn"
verbose_bit_mask = "warn"
wildcard_dependencies = "warn"
zero_sized_map_values = "warn"

[lints.clippy.nursery]
level = "warn"
priority = -2

[lints.clippy.pedantic]
level = "warn"
priority = -1

[lints.rust]
deprecated_safe = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
let_underscore_drop = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
missing_unsafe_on_extern = "warn"
non_ascii_idents = "warn"
non_local_definitions = "warn"
redundant_lifetimes = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unstable_features = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

[lints.rust.rust_2024_compatibility]
level = "warn"
priority = 1

[lints.rust.tail_expr_drop_order]
level = "allow"
priority = 2

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(nightly)"]

[lints.rustdoc]
missing_crate_level_docs = "warn"
unescaped_backticks = "warn"
