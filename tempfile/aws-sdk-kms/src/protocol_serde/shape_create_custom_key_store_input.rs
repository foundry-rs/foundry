// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_custom_key_store_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_custom_key_store::CreateCustomKeyStoreInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.custom_key_store_name {
        object.key("CustomKeyStoreName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.cloud_hsm_cluster_id {
        object.key("CloudHsmClusterId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.trust_anchor_certificate {
        object.key("TrustAnchorCertificate").string(var_3.as_str());
    }
    if let Some(var_4) = &input.key_store_password {
        object.key("KeyStorePassword").string(var_4.as_str());
    }
    if let Some(var_5) = &input.custom_key_store_type {
        object.key("CustomKeyStoreType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.xks_proxy_uri_endpoint {
        object.key("XksProxyUriEndpoint").string(var_6.as_str());
    }
    if let Some(var_7) = &input.xks_proxy_uri_path {
        object.key("XksProxyUriPath").string(var_7.as_str());
    }
    if let Some(var_8) = &input.xks_proxy_vpc_endpoint_service_name {
        object.key("XksProxyVpcEndpointServiceName").string(var_8.as_str());
    }
    if let Some(var_9) = &input.xks_proxy_authentication_credential {
        #[allow(unused_mut)]
        let mut object_10 = object.key("XksProxyAuthenticationCredential").start_object();
        crate::protocol_serde::shape_xks_proxy_authentication_credential_type::ser_xks_proxy_authentication_credential_type(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.xks_proxy_connectivity {
        object.key("XksProxyConnectivity").string(var_11.as_str());
    }
    Ok(())
}
