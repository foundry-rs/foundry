// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_generate_data_key_pair_without_plaintext_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::generate_data_key_pair_without_plaintext::GenerateDataKeyPairWithoutPlaintextInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.encryption_context {
        #[allow(unused_mut)]
        let mut object_2 = object.key("EncryptionContext").start_object();
        for (key_3, value_4) in var_1 {
            {
                object_2.key(key_3.as_str()).string(value_4.as_str());
            }
        }
        object_2.finish();
    }
    if let Some(var_5) = &input.key_id {
        object.key("KeyId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.key_pair_spec {
        object.key("KeyPairSpec").string(var_6.as_str());
    }
    if let Some(var_7) = &input.grant_tokens {
        let mut array_8 = object.key("GrantTokens").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.dry_run {
        object.key("DryRun").boolean(*var_10);
    }
    Ok(())
}
