// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_cancel_key_deletion;

pub(crate) mod shape_connect_custom_key_store;

pub(crate) mod shape_create_alias;

pub(crate) mod shape_create_custom_key_store;

pub(crate) mod shape_create_grant;

pub(crate) mod shape_create_key;

pub(crate) mod shape_decrypt;

pub(crate) mod shape_delete_alias;

pub(crate) mod shape_delete_custom_key_store;

pub(crate) mod shape_delete_imported_key_material;

pub(crate) mod shape_derive_shared_secret;

pub(crate) mod shape_describe_custom_key_stores;

pub(crate) mod shape_describe_key;

pub(crate) mod shape_disable_key;

pub(crate) mod shape_disable_key_rotation;

pub(crate) mod shape_disconnect_custom_key_store;

pub(crate) mod shape_enable_key;

pub(crate) mod shape_enable_key_rotation;

pub(crate) mod shape_encrypt;

pub(crate) mod shape_generate_data_key;

pub(crate) mod shape_generate_data_key_pair;

pub(crate) mod shape_generate_data_key_pair_without_plaintext;

pub(crate) mod shape_generate_data_key_without_plaintext;

pub(crate) mod shape_generate_mac;

pub(crate) mod shape_generate_random;

pub(crate) mod shape_get_key_policy;

pub(crate) mod shape_get_key_rotation_status;

pub(crate) mod shape_get_parameters_for_import;

pub(crate) mod shape_get_public_key;

pub(crate) mod shape_import_key_material;

pub(crate) mod shape_list_aliases;

pub(crate) mod shape_list_grants;

pub(crate) mod shape_list_key_policies;

pub(crate) mod shape_list_key_rotations;

pub(crate) mod shape_list_keys;

pub(crate) mod shape_list_resource_tags;

pub(crate) mod shape_list_retirable_grants;

pub(crate) mod shape_put_key_policy;

pub(crate) mod shape_re_encrypt;

pub(crate) mod shape_replicate_key;

pub(crate) mod shape_retire_grant;

pub(crate) mod shape_revoke_grant;

pub(crate) mod shape_rotate_key_on_demand;

pub(crate) mod shape_schedule_key_deletion;

pub(crate) mod shape_sign;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_alias;

pub(crate) mod shape_update_custom_key_store;

pub(crate) mod shape_update_key_description;

pub(crate) mod shape_update_primary_region;

pub(crate) mod shape_verify;

pub(crate) mod shape_verify_mac;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_already_exists_exception;

pub(crate) mod shape_cancel_key_deletion_input;

pub(crate) mod shape_cloud_hsm_cluster_in_use_exception;

pub(crate) mod shape_cloud_hsm_cluster_invalid_configuration_exception;

pub(crate) mod shape_cloud_hsm_cluster_not_active_exception;

pub(crate) mod shape_cloud_hsm_cluster_not_found_exception;

pub(crate) mod shape_cloud_hsm_cluster_not_related_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_connect_custom_key_store_input;

pub(crate) mod shape_create_alias_input;

pub(crate) mod shape_create_custom_key_store_input;

pub(crate) mod shape_create_grant_input;

pub(crate) mod shape_create_key_input;

pub(crate) mod shape_custom_key_store_has_cmks_exception;

pub(crate) mod shape_custom_key_store_invalid_state_exception;

pub(crate) mod shape_custom_key_store_name_in_use_exception;

pub(crate) mod shape_custom_key_store_not_found_exception;

pub(crate) mod shape_decrypt_input;

pub(crate) mod shape_delete_alias_input;

pub(crate) mod shape_delete_custom_key_store_input;

pub(crate) mod shape_delete_imported_key_material_input;

pub(crate) mod shape_dependency_timeout_exception;

pub(crate) mod shape_derive_shared_secret_input;

pub(crate) mod shape_describe_custom_key_stores_input;

pub(crate) mod shape_describe_key_input;

pub(crate) mod shape_disable_key_input;

pub(crate) mod shape_disable_key_rotation_input;

pub(crate) mod shape_disabled_exception;

pub(crate) mod shape_disconnect_custom_key_store_input;

pub(crate) mod shape_dry_run_operation_exception;

pub(crate) mod shape_enable_key_input;

pub(crate) mod shape_enable_key_rotation_input;

pub(crate) mod shape_encrypt_input;

pub(crate) mod shape_expired_import_token_exception;

pub(crate) mod shape_generate_data_key_input;

pub(crate) mod shape_generate_data_key_pair_input;

pub(crate) mod shape_generate_data_key_pair_without_plaintext_input;

pub(crate) mod shape_generate_data_key_without_plaintext_input;

pub(crate) mod shape_generate_mac_input;

pub(crate) mod shape_generate_random_input;

pub(crate) mod shape_get_key_policy_input;

pub(crate) mod shape_get_key_rotation_status_input;

pub(crate) mod shape_get_parameters_for_import_input;

pub(crate) mod shape_get_public_key_input;

pub(crate) mod shape_import_key_material_input;

pub(crate) mod shape_incorrect_key_exception;

pub(crate) mod shape_incorrect_key_material_exception;

pub(crate) mod shape_incorrect_trust_anchor_exception;

pub(crate) mod shape_invalid_alias_name_exception;

pub(crate) mod shape_invalid_arn_exception;

pub(crate) mod shape_invalid_ciphertext_exception;

pub(crate) mod shape_invalid_grant_id_exception;

pub(crate) mod shape_invalid_grant_token_exception;

pub(crate) mod shape_invalid_import_token_exception;

pub(crate) mod shape_invalid_key_usage_exception;

pub(crate) mod shape_invalid_marker_exception;

pub(crate) mod shape_key_unavailable_exception;

pub(crate) mod shape_kms_internal_exception;

pub(crate) mod shape_kms_invalid_mac_exception;

pub(crate) mod shape_kms_invalid_signature_exception;

pub(crate) mod shape_kms_invalid_state_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_aliases_input;

pub(crate) mod shape_list_grants_input;

pub(crate) mod shape_list_key_policies_input;

pub(crate) mod shape_list_key_rotations_input;

pub(crate) mod shape_list_keys_input;

pub(crate) mod shape_list_resource_tags_input;

pub(crate) mod shape_list_retirable_grants_input;

pub(crate) mod shape_malformed_policy_document_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_put_key_policy_input;

pub(crate) mod shape_re_encrypt_input;

pub(crate) mod shape_replicate_key_input;

pub(crate) mod shape_retire_grant_input;

pub(crate) mod shape_revoke_grant_input;

pub(crate) mod shape_rotate_key_on_demand_input;

pub(crate) mod shape_schedule_key_deletion_input;

pub(crate) mod shape_sign_input;

pub(crate) mod shape_tag_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_unsupported_operation_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_alias_input;

pub(crate) mod shape_update_custom_key_store_input;

pub(crate) mod shape_update_key_description_input;

pub(crate) mod shape_update_primary_region_input;

pub(crate) mod shape_verify_input;

pub(crate) mod shape_verify_mac_input;

pub(crate) mod shape_xks_key_already_in_use_exception;

pub(crate) mod shape_xks_key_invalid_configuration_exception;

pub(crate) mod shape_xks_key_not_found_exception;

pub(crate) mod shape_xks_proxy_incorrect_authentication_credential_exception;

pub(crate) mod shape_xks_proxy_invalid_configuration_exception;

pub(crate) mod shape_xks_proxy_invalid_response_exception;

pub(crate) mod shape_xks_proxy_uri_endpoint_in_use_exception;

pub(crate) mod shape_xks_proxy_uri_in_use_exception;

pub(crate) mod shape_xks_proxy_uri_unreachable_exception;

pub(crate) mod shape_xks_proxy_vpc_endpoint_service_in_use_exception;

pub(crate) mod shape_xks_proxy_vpc_endpoint_service_invalid_configuration_exception;

pub(crate) mod shape_xks_proxy_vpc_endpoint_service_not_found_exception;

pub(crate) mod shape_alias_list;

pub(crate) mod shape_custom_key_stores_list;

pub(crate) mod shape_encryption_algorithm_spec_list;

pub(crate) mod shape_grant_constraints;

pub(crate) mod shape_grant_list;

pub(crate) mod shape_key_agreement_algorithm_spec_list;

pub(crate) mod shape_key_list;

pub(crate) mod shape_key_metadata;

pub(crate) mod shape_policy_name_list;

pub(crate) mod shape_recipient_info;

pub(crate) mod shape_rotations_list;

pub(crate) mod shape_signing_algorithm_spec_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_xks_proxy_authentication_credential_type;

pub(crate) mod shape_alias_list_entry;

pub(crate) mod shape_custom_key_stores_list_entry;

pub(crate) mod shape_grant_list_entry;

pub(crate) mod shape_key_list_entry;

pub(crate) mod shape_mac_algorithm_spec_list;

pub(crate) mod shape_multi_region_configuration;

pub(crate) mod shape_rotations_list_entry;

pub(crate) mod shape_xks_key_configuration_type;

pub(crate) mod shape_grant_operation_list;

pub(crate) mod shape_multi_region_key;

pub(crate) mod shape_multi_region_key_list;

pub(crate) mod shape_xks_proxy_configuration_type;

pub(crate) mod shape_encryption_context_type;
