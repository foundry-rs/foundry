// @generated
/// Implement `DataProvider<LikelySubtagsForScriptRegionV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_locid_transform_likelysubtags_sr_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.67"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_LOCID_TRANSFORM_LIKELYSUBTAGS_SR_V1: &'static <icu::locid_transform::provider::LikelySubtagsForScriptRegionV1Marker as icu_provider::DataMarker>::Yokeable = &icu::locid_transform::provider::LikelySubtagsForScriptRegionV1 {
                script_region: unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"ArabAF\0ArabCC\0ArabCN\0ArabGB\0ArabID\0ArabIN\0ArabIR\0ArabMN\0ArabMU\0ArabNG\0ArabPK\0ArabTJ\0CyrlAL\0CyrlBA\0CyrlBG\0CyrlBY\0CyrlGR\0CyrlKG\0CyrlMD\0CyrlMK\0CyrlMN\0CyrlRO\0CyrlRS\0CyrlSK\0CyrlTJ\0CyrlUA\0CyrlXK\0DevaBT\0DevaMU\0DevaNP\0EthiER\0HantCA\0Latn419LatnAD\0LatnAF\0LatnAL\0LatnAM\0LatnAO\0LatnAR\0LatnAT\0LatnAW\0LatnAX\0LatnAZ\0LatnBA\0LatnBE\0LatnBF\0LatnBJ\0LatnBL\0LatnBN\0LatnBO\0LatnBR\0LatnCD\0LatnCF\0LatnCG\0LatnCH\0LatnCI\0LatnCL\0LatnCM\0LatnCN\0LatnCO\0LatnCR\0LatnCU\0LatnCV\0LatnCY\0LatnCZ\0LatnDE\0LatnDK\0LatnDO\0LatnDZ\0LatnEA\0LatnEC\0LatnEE\0LatnES\0LatnET\0LatnFI\0LatnFO\0LatnFR\0LatnGA\0LatnGE\0LatnGF\0LatnGN\0LatnGP\0LatnGQ\0LatnGT\0LatnGW\0LatnHN\0LatnHR\0LatnHU\0LatnIC\0LatnID\0LatnIR\0LatnIS\0LatnIT\0LatnKE\0LatnKM\0LatnLI\0LatnLT\0LatnLU\0LatnLV\0LatnMA\0LatnMC\0LatnMD\0LatnME\0LatnMF\0LatnMK\0LatnMO\0LatnMQ\0LatnMR\0LatnMT\0LatnMX\0LatnMY\0LatnMZ\0LatnNA\0LatnNC\0LatnNE\0LatnNI\0LatnNL\0LatnPA\0LatnPE\0LatnPF\0LatnPH\0LatnPL\0LatnPM\0LatnPR\0LatnPT\0LatnRE\0LatnRO\0LatnRS\0LatnSC\0LatnSE\0LatnSI\0LatnSK\0LatnSM\0LatnSN\0LatnSO\0LatnSR\0LatnST\0LatnSV\0LatnSY\0LatnTD\0LatnTF\0LatnTG\0LatnTL\0LatnTM\0LatnTN\0LatnTO\0LatnTR\0LatnTZ\0LatnUA\0LatnUG\0LatnUY\0LatnUZ\0LatnVA\0LatnVE\0LatnVN\0LatnWF\0LatnXK\0LatnYT\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"fa\0ms\0ug\0ur\0ms\0ur\0fa\0kk\0ur\0ha\0ur\0fa\0mk\0sr\0bg\0be\0mk\0ky\0uk\0mk\0mn\0bg\0sr\0uk\0tg\0uk\0sr\0ne\0bhone\0ti\0yuees\0ca\0tk\0sq\0ku\0pt\0es\0de\0nl\0sv\0az\0bs\0nl\0fr\0fr\0fr\0ms\0es\0pt\0sw\0fr\0fr\0de\0fr\0es\0fr\0za\0es\0es\0es\0pt\0tr\0cs\0de\0da\0es\0fr\0es\0es\0et\0es\0en\0fi\0fo\0fr\0fr\0ku\0fr\0fr\0fr\0es\0es\0pt\0es\0hr\0hu\0es\0id\0tk\0is\0it\0sw\0fr\0de\0lt\0fr\0lv\0fr\0fr\0ro\0sr\0fr\0sq\0pt\0fr\0fr\0mt\0es\0ms\0pt\0af\0fr\0ha\0es\0nl\0es\0es\0fr\0filpl\0fr\0es\0pt\0fr\0ro\0sr\0fr\0sv\0sl\0sk\0it\0fr\0so\0nl\0pt\0es\0fr\0fr\0fr\0fr\0pt\0tk\0fr\0to\0tr\0sw\0pl\0sw\0es\0uz\0it\0es\0vi\0fr\0sq\0fr\0") })
                },
                script: unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"AdlmArabArmnBengBhksBopoBraiCherCyrlDevaDogrDuplElbaEthiGeorGranGrekGujrGuruHanbHangHaniHansHantHebrHiraHungJamoJavaJpanKanaKhmrKhojKndaKoreKthiLaooLatnMahjMlymModiMongMteiMymrNandOlckOryaOsmaShawShrdSiddSindSinhSundSyrcTakrTamlTeluTglgThaiTirhVithYezi") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"ff\0GN\0ar\0EG\0hy\0AM\0bn\0BD\0sa\0IN\0zh\0TW\0fr\0FR\0chrUS\0ru\0RU\0hi\0IN\0doiIN\0fr\0FR\0sq\0AL\0am\0ET\0ka\0GE\0sa\0IN\0el\0GR\0gu\0IN\0pa\0IN\0zh\0TW\0ko\0KR\0zh\0CN\0zh\0CN\0zh\0TW\0he\0IL\0ja\0JP\0hu\0HU\0ko\0KR\0jv\0ID\0ja\0JP\0ja\0JP\0km\0KH\0sd\0IN\0kn\0IN\0ko\0KR\0bhoIN\0lo\0LA\0en\0US\0hi\0IN\0ml\0IN\0mr\0IN\0mn\0CN\0mniIN\0my\0MM\0sa\0IN\0satIN\0or\0IN\0so\0SO\0en\0GB\0sa\0IN\0sa\0IN\0sd\0IN\0si\0LK\0su\0ID\0syrIQ\0doiIN\0ta\0IN\0te\0IN\0filPH\0th\0TH\0maiIN\0sq\0AL\0ku\0GE\0") })
                },
                region: unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"419AC\0AD\0AE\0AF\0AG\0AI\0AL\0AM\0AO\0AQ\0AR\0AT\0AU\0AW\0AX\0AZ\0BA\0BB\0BD\0BE\0BF\0BG\0BH\0BJ\0BL\0BM\0BN\0BO\0BR\0BS\0BV\0BW\0BY\0BZ\0CA\0CC\0CD\0CF\0CG\0CH\0CI\0CK\0CL\0CM\0CN\0CO\0CP\0CQ\0CR\0CU\0CV\0CX\0CY\0CZ\0DE\0DG\0DK\0DM\0DO\0DZ\0EA\0EC\0EE\0EG\0EH\0ER\0ES\0ET\0FI\0FJ\0FK\0FM\0FO\0FR\0GA\0GB\0GD\0GE\0GF\0GG\0GI\0GM\0GN\0GP\0GQ\0GR\0GS\0GT\0GU\0GW\0GY\0HK\0HM\0HN\0HR\0HU\0IC\0ID\0IE\0IL\0IM\0IN\0IO\0IQ\0IR\0IS\0IT\0JE\0JM\0JO\0JP\0KE\0KG\0KH\0KI\0KM\0KN\0KP\0KR\0KW\0KY\0KZ\0LA\0LB\0LC\0LI\0LK\0LR\0LT\0LU\0LV\0LY\0MA\0MC\0MD\0ME\0MF\0MH\0MK\0MM\0MN\0MO\0MP\0MQ\0MR\0MS\0MT\0MW\0MX\0MY\0MZ\0NA\0NC\0NE\0NF\0NG\0NI\0NL\0NP\0NR\0NU\0NZ\0OM\0PA\0PE\0PF\0PH\0PK\0PL\0PM\0PN\0PR\0PS\0PT\0QA\0RE\0RO\0RS\0RU\0SA\0SB\0SC\0SD\0SE\0SG\0SH\0SI\0SK\0SM\0SN\0SO\0SR\0SS\0ST\0SV\0SX\0SY\0SZ\0TA\0TC\0TD\0TF\0TG\0TH\0TJ\0TL\0TM\0TN\0TO\0TR\0TT\0TW\0TZ\0UA\0UG\0UM\0US\0UY\0UZ\0VA\0VC\0VE\0VG\0VI\0VN\0WF\0XK\0YE\0YT\0ZA\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"es\0Latnen\0Latnca\0Latnar\0Arabfa\0Araben\0Latnen\0Latnsq\0Latnhy\0Armnpt\0Latnen\0Latnes\0Latnde\0Latnen\0Latnnl\0Latnsv\0Latnaz\0Latnbs\0Latnen\0Latnbn\0Bengnl\0Latnfr\0Latnbg\0Cyrlar\0Arabfr\0Latnfr\0Latnen\0Latnms\0Latnes\0Latnpt\0Latnen\0Latnen\0Latnen\0Latnbe\0Cyrlen\0Latnen\0Latnms\0Arabsw\0Latnfr\0Latnfr\0Latnde\0Latnfr\0Latnen\0Latnes\0Latnfr\0Latnzh\0Hanses\0Latnen\0Latnen\0Latnes\0Latnes\0Latnpt\0Latnen\0Latnel\0Grekcs\0Latnde\0Latnen\0Latnda\0Latnen\0Latnes\0Latnar\0Arabes\0Latnes\0Latnet\0Latnar\0Arabar\0Arabti\0Ethies\0Latnam\0Ethifi\0Latnen\0Latnen\0Latnen\0Latnfo\0Latnfr\0Latnfr\0Latnen\0Latnen\0Latnka\0Georfr\0Latnen\0Latnen\0Latnen\0Latnfr\0Latnfr\0Latnes\0Latnel\0Greken\0Latnes\0Latnen\0Latnpt\0Latnen\0Latnzh\0Hanten\0Latnes\0Latnhr\0Latnhu\0Latnes\0Latnid\0Latnen\0Latnhe\0Hebren\0Latnhi\0Devaen\0Latnar\0Arabfa\0Arabis\0Latnit\0Latnen\0Latnen\0Latnar\0Arabja\0Jpansw\0Latnky\0Cyrlkm\0Khmren\0Latnar\0Araben\0Latnko\0Koreko\0Korear\0Araben\0Latnru\0Cyrllo\0Laooar\0Araben\0Latnde\0Latnsi\0Sinhen\0Latnlt\0Latnfr\0Latnlv\0Latnar\0Arabar\0Arabfr\0Latnro\0Latnsr\0Latnfr\0Latnen\0Latnmk\0Cyrlmy\0Mymrmn\0Cyrlzh\0Hanten\0Latnfr\0Latnar\0Araben\0Latnmt\0Latnen\0Latnes\0Latnms\0Latnpt\0Latnaf\0Latnfr\0Latnha\0Latnen\0Latnen\0Latnes\0Latnnl\0Latnne\0Devaen\0Latnen\0Latnen\0Latnar\0Arabes\0Latnes\0Latnfr\0LatnfilLatnur\0Arabpl\0Latnfr\0Latnen\0Latnes\0Latnar\0Arabpt\0Latnar\0Arabfr\0Latnro\0Latnsr\0Cyrlru\0Cyrlar\0Araben\0Latnfr\0Latnar\0Arabsv\0Latnen\0Latnen\0Latnsl\0Latnsk\0Latnit\0Latnfr\0Latnso\0Latnnl\0Latnar\0Arabpt\0Latnes\0Latnen\0Latnar\0Araben\0Latnen\0Latnen\0Latnfr\0Latnfr\0Latnfr\0Latnth\0Thaitg\0Cyrlpt\0Latntk\0Latnar\0Arabto\0Latntr\0Latnen\0Latnzh\0Hantsw\0Latnuk\0Cyrlsw\0Latnen\0Latnen\0Latnes\0Latnuz\0Latnit\0Latnen\0Latnes\0Latnen\0Latnen\0Latnvi\0Latnfr\0Latnsq\0Latnar\0Arabfr\0Latnen\0Latn") })
                },
            };
        }
        #[clippy::msrv = "1.67"]
        impl icu_provider::DataProvider<icu::locid_transform::provider::LikelySubtagsForScriptRegionV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::locid_transform::provider::LikelySubtagsForScriptRegionV1Marker>, icu_provider::DataError> {
                if req.locale.is_empty() {
                    Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(Self::SINGLETON_LOCID_TRANSFORM_LIKELYSUBTAGS_SR_V1)), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::ExtraneousLocale.with_req(<icu::locid_transform::provider::LikelySubtagsForScriptRegionV1Marker as icu_provider::KeyedDataMarker>::KEY, req))
                }
            }
        }
    };
}
/// Implement `IterableDataProvider<LikelySubtagsForScriptRegionV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this key.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_locid_transform_likelysubtags_sr_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        impl icu_provider::datagen::IterableDataProvider<icu::locid_transform::provider::LikelySubtagsForScriptRegionV1Marker> for $provider {
            fn supported_locales(&self) -> Result<alloc::vec::Vec<icu_provider::DataLocale>, icu_provider::DataError> {
                Ok([icu_provider::DataLocale::default()].into())
            }
        }
    };
}
