# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.75.0"
name = "derive_more"
version = "1.0.0"
authors = ["Jelte Fennema <github-tech@jeltef.nl>"]
build = false
include = [
    "src/**/*.rs",
    "Cargo.toml",
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
    "tests/**/*.rs",
    "examples/**/*.rs",
]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Adds #[derive(x)] macros for more traits"
documentation = "https://docs.rs/derive_more"
readme = "README.md"
keywords = [
    "derive",
    "Add",
    "From",
    "Display",
    "IntoIterator",
]
categories = [
    "development-tools",
    "development-tools::procedural-macro-helpers",
    "no-std",
    "rust-patterns",
]
license = "MIT"
repository = "https://github.com/JelteF/derive_more"

[package.metadata.docs.rs]
features = ["full"]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "derive_more"
path = "src/lib.rs"

[[example]]
name = "deny_missing_docs"
path = "examples/deny_missing_docs.rs"
required-features = ["full"]

[[test]]
name = "add"
path = "tests/add.rs"
required-features = ["add"]

[[test]]
name = "add_assign"
path = "tests/add_assign.rs"
required-features = ["add_assign"]

[[test]]
name = "as_mut"
path = "tests/as_mut.rs"
required-features = ["as_ref"]

[[test]]
name = "as_ref"
path = "tests/as_ref.rs"
required-features = ["as_ref"]

[[test]]
name = "boats_display_derive"
path = "tests/boats_display_derive.rs"
required-features = ["display"]

[[test]]
name = "compile_fail"
path = "tests/compile_fail/mod.rs"
required-features = [
    "as_ref",
    "debug",
    "display",
    "from",
    "into",
    "is_variant",
    "try_from",
]

[[test]]
name = "constructor"
path = "tests/constructor.rs"
required-features = ["constructor"]

[[test]]
name = "debug"
path = "tests/debug.rs"
required-features = ["debug"]

[[test]]
name = "deref"
path = "tests/deref.rs"
required-features = ["deref"]

[[test]]
name = "deref_mut"
path = "tests/deref_mut.rs"
required-features = ["deref_mut"]

[[test]]
name = "display"
path = "tests/display.rs"
required-features = ["display"]

[[test]]
name = "error"
path = "tests/error_tests.rs"
required-features = ["error"]

[[test]]
name = "from"
path = "tests/from.rs"
required-features = ["from"]

[[test]]
name = "from_str"
path = "tests/from_str.rs"
required-features = ["from_str"]

[[test]]
name = "generics"
path = "tests/generics.rs"
required-features = ["full"]

[[test]]
name = "index"
path = "tests/index.rs"
required-features = ["index"]

[[test]]
name = "index_mut"
path = "tests/index_mut.rs"
required-features = ["index_mut"]

[[test]]
name = "into"
path = "tests/into.rs"
required-features = ["into"]

[[test]]
name = "into_iterator"
path = "tests/into_iterator.rs"
required-features = ["into_iterator"]

[[test]]
name = "is_variant"
path = "tests/is_variant.rs"
required-features = ["is_variant"]

[[test]]
name = "lib"
path = "tests/lib.rs"
required-features = ["full"]

[[test]]
name = "mul"
path = "tests/mul.rs"
required-features = ["mul"]

[[test]]
name = "mul_assign"
path = "tests/mul_assign.rs"
required-features = ["mul_assign"]

[[test]]
name = "no_std"
path = "tests/no_std.rs"
required-features = ["full"]

[[test]]
name = "not"
path = "tests/not.rs"
required-features = ["not"]

[[test]]
name = "sum"
path = "tests/sum.rs"
required-features = ["sum"]

[[test]]
name = "try_from"
path = "tests/try_from.rs"
required-features = ["try_from"]

[[test]]
name = "try_into"
path = "tests/try_into.rs"
required-features = ["try_into"]

[[test]]
name = "try_unwrap"
path = "tests/try_unwrap.rs"
required-features = ["try_unwrap"]

[[test]]
name = "unwrap"
path = "tests/unwrap.rs"
required-features = ["unwrap"]

[dependencies.derive_more-impl]
version = "=1.0.0"

[dev-dependencies.rustversion]
version = "1.0"

[dev-dependencies.static_assertions]
version = "1.1"

[dev-dependencies.trybuild]
version = "1.0.56"

[build-dependencies.rustc_version]
version = "0.4"
optional = true

[features]
add = ["derive_more-impl/add"]
add_assign = ["derive_more-impl/add_assign"]
as_ref = ["derive_more-impl/as_ref"]
constructor = ["derive_more-impl/constructor"]
debug = ["derive_more-impl/debug"]
default = ["std"]
deref = ["derive_more-impl/deref"]
deref_mut = ["derive_more-impl/deref_mut"]
display = ["derive_more-impl/display"]
error = ["derive_more-impl/error"]
from = ["derive_more-impl/from"]
from_str = ["derive_more-impl/from_str"]
full = [
    "add",
    "add_assign",
    "as_ref",
    "constructor",
    "debug",
    "deref",
    "deref_mut",
    "display",
    "error",
    "from",
    "from_str",
    "index",
    "index_mut",
    "into",
    "into_iterator",
    "is_variant",
    "mul",
    "mul_assign",
    "not",
    "sum",
    "try_from",
    "try_into",
    "try_unwrap",
    "unwrap",
]
index = ["derive_more-impl/index"]
index_mut = ["derive_more-impl/index_mut"]
into = ["derive_more-impl/into"]
into_iterator = ["derive_more-impl/into_iterator"]
is_variant = ["derive_more-impl/is_variant"]
mul = ["derive_more-impl/mul"]
mul_assign = ["derive_more-impl/mul_assign"]
not = ["derive_more-impl/not"]
std = []
sum = ["derive_more-impl/sum"]
testing-helpers = [
    "derive_more-impl/testing-helpers",
    "dep:rustc_version",
]
try_from = ["derive_more-impl/try_from"]
try_into = ["derive_more-impl/try_into"]
try_unwrap = ["derive_more-impl/try_unwrap"]
unwrap = ["derive_more-impl/unwrap"]

[badges.github]
repository = "JelteF/derive_more"
workflow = "CI"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = [
    "cfg(ci)",
    "cfg(nightly)",
]
