# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "compact_str"
version = "0.8.1"
authors = ["Parker Timmerman <parker@parkertimmerman.com>"]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "A memory efficient string type that transparently stores strings on the stack, when possible"
homepage = "https://github.com/ParkMyCar/compact_str"
readme = "README.md"
keywords = [
    "string",
    "compact",
    "small",
    "memory",
    "mutable",
]
categories = [
    "encoding",
    "parsing",
    "memory-management",
    "text-processing",
]
license = "MIT"
repository = "https://github.com/ParkMyCar/compact_str"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "compact_str"
path = "src/lib.rs"

[dependencies.arbitrary]
version = "1"
optional = true
default-features = false

[dependencies.borsh]
version = "1"
optional = true

[dependencies.bytes]
version = "1"
optional = true

[dependencies.castaway]
version = "0.2.3"
features = ["alloc"]
default-features = false

[dependencies.cfg-if]
version = "1"

[dependencies.diesel]
version = "2"
optional = true
default-features = false

[dependencies.itoa]
version = "1"

[dependencies.markup]
version = "0.13"
optional = true
default-features = false

[dependencies.proptest]
version = "1"
features = ["std"]
optional = true
default-features = false

[dependencies.quickcheck]
version = "1"
optional = true
default-features = false

[dependencies.rkyv]
version = "0.7"
features = ["size_32"]
optional = true
default-features = false

[dependencies.rustversion]
version = "1"

[dependencies.ryu]
version = "1"

[dependencies.serde]
version = "1"
features = [
    "derive",
    "alloc",
]
optional = true
default-features = false

[dependencies.smallvec]
version = "1"
features = ["union"]
optional = true

[dependencies.sqlx]
version = "0.7"
optional = true
default-features = false

[dependencies.static_assertions]
version = "1"

[dev-dependencies.cfg-if]
version = "1"

[dev-dependencies.proptest]
version = "1"
features = ["std"]
default-features = false

[dev-dependencies.quickcheck]
version = "1"
default-features = false

[dev-dependencies.quickcheck_macros]
version = "1"

[dev-dependencies.rayon]
version = "1"

[dev-dependencies.rkyv]
version = "0.7"
features = [
    "alloc",
    "size_32",
]
default-features = false

[dev-dependencies.serde]
version = "1"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1"

[dev-dependencies.test-case]
version = "3"

[dev-dependencies.test-strategy]
version = "0.3"

[features]
arbitrary = ["dep:arbitrary"]
borsh = ["dep:borsh"]
bytes = ["dep:bytes"]
default = ["std"]
diesel = ["dep:diesel"]
markup = ["dep:markup"]
proptest = ["dep:proptest"]
quickcheck = ["dep:quickcheck"]
rkyv = ["dep:rkyv"]
serde = ["dep:serde"]
smallvec = ["dep:smallvec"]
sqlx = [
    "dep:sqlx",
    "std",
]
sqlx-mysql = [
    "sqlx",
    "sqlx/mysql",
]
sqlx-postgres = [
    "sqlx",
    "sqlx/postgres",
]
sqlx-sqlite = [
    "sqlx",
    "sqlx/sqlite",
]
std = []
