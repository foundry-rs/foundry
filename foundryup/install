#!/usr/bin/env bash
set -e

readonly SUCCESS_MARK="\033[0;32m✔\033[0m"
readonly FAIL_MARK="\033[0;31m✘\033[0m"
# https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_(Control_Sequence_Introducer)_sequences
# [nF is "cursor previous line" and moves to the beginning of the nth previous line
# [0K is "erase display" and clears from the cursor to the end of the screen
readonly CLEAR_LAST_MSG="\033[1F\033[0K"

echo "Installing foundryup..."

FOUNDRY_DIR=${FOUNDRY_DIR-"$HOME/.foundry"}
FOUNDRY_BIN_DIR="$FOUNDRY_DIR/bin"
FOUNDRY_MAN_DIR="$FOUNDRY_DIR/share/man/man1"

BIN_URL="https://raw.githubusercontent.com/foundry-rs/foundry/master/foundryup/foundryup"
BIN_PATH="$FOUNDRY_BIN_DIR/foundryup"

# Create the .foundry bin directory and foundryup binary if it doesn't exist.
mkdir -p "$FOUNDRY_BIN_DIR"
readonly CURL_FLAGS="${CURL_FLAGS:- -# -vvv --max-time 120 --retry 3 --fail}"

# we deliberately don't quote CURL_FLAGS
# shellcheck disable=SC2086 
curl ${CURL_FLAGS}  "${BIN_URL}" -o "${BIN_PATH}"
if ! $? -ne 0; then
	>&2 echo -e "${FAIL_MARK} Error: failed to download Foundry - $?"
	exit 2
fi
echo -e "${CLEAR_LAST_MSG}${SUCCESS_MARK} Installing Foundry"
chmod +x "$BIN_PATH"

# Create the man directory for future man files if it doesn't exist.
mkdir -p "$FOUNDRY_MAN_DIR"

# Store the correct profile file (i.e. .profile for bash or .zshrc for ZSH).
case $SHELL in
*/zsh)
    PROFILE=$HOME/.zshrc
    PREF_SHELL=zsh
    ;;
*/bash)
    PROFILE=$HOME/.bashrc
    PREF_SHELL=bash
    ;;
*/fish)
    PROFILE=$HOME/.config/fish/config.fish
    PREF_SHELL=fish
    ;;
*/ash)
    PROFILE=$HOME/.profile
    PREF_SHELL=ash
    ;;
*)
    echo "foundryup: could not detect shell, manually add ${FOUNDRY_BIN_DIR} to your PATH."
    exit 1
esac

# Only add foundryup if it isn't already in PATH.
if [[ ":$PATH:" != *":${FOUNDRY_BIN_DIR}:"* ]]; then
    # Add the foundryup directory to the path and ensure the old PATH variables remain.
    echo >> "$PROFILE" && echo "export PATH=\"\$PATH:$FOUNDRY_BIN_DIR\"" >> "$PROFILE"
fi

# Warn MacOS users that they may need to manually install libusb via Homebrew:
#if [[ "$OSTYPE" =~ ^darwin && ! -f /opt/homebrew/opt/libusb/lib/libusb-1.0.0.dylib ]]; then
if [[ "$OSTYPE" =~ ^darwin ]]; then

    brew_prefix=$(brew --prefix)
    if [[ $(uname -m) == 'arm64' ]]; then
      echo "** Running on a Apple Silicon M1"
      export expected_prefix=/opt/homebrew
    else
      echo "** Running on a Apple x86"
      export expected_prefix=/usr/local
    fi

    # Ensure that we have libgit2's dependencies installed.
    installed=$(brew list)

    REQUIRED_TOOLS="libusb"
    for tool in $REQUIRED_TOOLS
    do
        # Skip packages that are already installed.
        echo "$installed" | grep -q "$tool" && code=$? || code=$?

        if [ "$code" -eq "0" ]
        then
            echo "*** $tool is available"
            continue
        elif [ "$code" -ne "1" ]
        then
            exit "$code"
        fi

        echo "*** Installing $tool with Homebrew..."
        brew install "$tool"
    done

echo -e "${CLEAR_LAST_MSG}${SUCCESS_MARK} Foundryup setup OK"

fi

echo && echo "Detected your preferred shell is ${PREF_SHELL} and added foundryup to PATH. Run 'source ${PROFILE}' or start a new terminal session to use foundryup."
echo "Then, simply run 'foundryup' to install Foundry."
echo
echo -e "${CLEAR_LAST_MSG}${SUCCESS_MARK} Foundryup successfully installed!"
sleep 1
